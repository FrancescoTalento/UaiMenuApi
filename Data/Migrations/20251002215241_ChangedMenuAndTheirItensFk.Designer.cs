// <auto-generated />
using System;
using Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(UaiMenuDbContext))]
    [Migration("20251002215241_ChangedMenuAndTheirItensFk")]
    partial class ChangedMenuAndTheirItensFk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Models.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("CanManageAdmins")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanManageMenus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<long>("RestaurantId")
                        .HasColumnType("bigint");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RestaurantId");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Nome")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("OptIn")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("opt_in");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("client", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Models.ImageFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AltText")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MenuItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("RelativePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("RestaurantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("RelativePath")
                        .IsUnique();

                    b.HasIndex("RestaurantId");

                    b.ToTable("imagem_file", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Models.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("MenuDate")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("enum('dom','seg','ter','qua','qui','sex','sab')")
                        .HasColumnName("menu_date");

                    b.Property<long>("RestaurantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId", "MenuDate")
                        .IsUnique()
                        .HasDatabaseName("uq_menu_rest_dow");

                    b.HasIndex(new[] { "RestaurantId", "MenuDate" }, "uq_menu_rest_dow")
                        .IsUnique();

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Models.MenuItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Posicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<long>("RestaurantId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("enum('carne','acompanhamento','salada')");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("menu_item", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Models.Restaurant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("restaurant", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Models.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("set('dom','seg','ter','qua','qui','sex','sab')")
                        .HasColumnName("days");

                    b.Property<TimeOnly>("HoraEnvioLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasColumnName("hora_envio_local")
                        .HasDefaultValueSql("'10:00:00'");

                    b.Property<long>("RestaurantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("ClientId", "RestaurantId")
                        .IsUnique()
                        .HasDatabaseName("uq_subscription");

                    b.HasIndex(new[] { "ClientId", "RestaurantId" }, "uq_subscription")
                        .IsUnique();

                    b.ToTable("subscription", (string)null);
                });

            modelBuilder.Entity("MenuMenuItem", b =>
                {
                    b.Property<long>("ItensId")
                        .HasColumnType("bigint");

                    b.Property<long>("MenusId")
                        .HasColumnType("bigint");

                    b.HasKey("ItensId", "MenusId");

                    b.HasIndex("MenusId");

                    b.ToTable("menu_menu_item", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Models.Admin", b =>
                {
                    b.HasOne("Data.Entities.Models.Restaurant", "Restaurant")
                        .WithMany("Admins")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Data.Entities.Models.ImageFile", b =>
                {
                    b.HasOne("Data.Entities.Models.Menu", "Menu")
                        .WithMany("Images")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.Models.MenuItem", "MenuItem")
                        .WithMany("Images")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.Models.Restaurant", "Restaurant")
                        .WithMany("Images")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Menu");

                    b.Navigation("MenuItem");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Data.Entities.Models.Menu", b =>
                {
                    b.HasOne("Data.Entities.Models.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Data.Entities.Models.MenuItem", b =>
                {
                    b.HasOne("Data.Entities.Models.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Data.Entities.Models.Subscription", b =>
                {
                    b.HasOne("Data.Entities.Models.Cliente", "Client")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Models.Restaurant", "Restaurant")
                        .WithMany("Subscriptions")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("MenuMenuItem", b =>
                {
                    b.HasOne("Data.Entities.Models.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("ItensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Models.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Models.Cliente", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Data.Entities.Models.Menu", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Data.Entities.Models.MenuItem", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Data.Entities.Models.Restaurant", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Images");

                    b.Navigation("MenuItems");

                    b.Navigation("Menus");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
